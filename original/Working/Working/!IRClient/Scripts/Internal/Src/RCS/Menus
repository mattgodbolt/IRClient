head     1.1;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @@;


1.1
date     97.04.13.12.39.40;  author gerph;  state Exp;
branches ;
next     ;


desc
@IRClient's base menu handler
@



1.1
log
@Initial revision
@
text
@REM >Internal.Menus
REM LEN 1996 M Richard G & J Richard F
REM This file generates and handles all of the internal menu
REM structures
REM Do not edit this file, use the Overload_AddMenuEntries method
REM for adding options to menus
REM 04 Jan 1997 - MG: Started                              v1.00
REM 05 Jan 1997 - JF: Basic overload system for adding     v1.01
REM 07 Jan 1997 - JF: Bug fixes and CTCP menu added        v1.02
REM 18 Jan 1997 - JF: User windows now overloadable        v1.03
REM 18 Jan 1997 - JF: Channels moved to the main window    v1.04
END

DEF PROCMenus_Initialise
Online=FALSE
Menu_Entries=0
ENDPROC
:
DEF PROCOnline
Online=TRUE
REM And pass it on
PROC@@
ENDPROC
:
DEF PROCOffline
Online=FALSE
REM And pass it on
PROC@@
ENDPROC
:
REM We need to reset the number of entries
DEF PROCNewMenu(a$,b$)
Menu_Entries=0
PROC@@(a$,b$)
ENDPROC
:
REM We need to know the number of entries
DEF PROCAddMenuEntry(a$,b$,c,d,e$)
Menu_Entries+=1
PROC@@(a$,b$,c,d,e$)
ENDPROC
:
REM Overload this if you wish to add entries to an existing menu
DEF PROCOverload_AddMenuEntries(menu$)
ENDPROC

REM Overload this if you wish to create a menu for your window
REM If you wish to do so, use PROCNewMenu("TITLE!",menu$)
REM Return TRUE if you wish to have a 'Save' item at the bottom
REM Return FALSE otherwise
DEF FNOverload_UnknownWindowMenu(display$,menu$)
LOCAL ret
ret=TRUE
CASE display$ OF
 WHEN "##server##"
  PROCNewMenu("Server",menu$)
  PROCAddMenuEntry("Disconnect","Disconnect",NOT Online,0,"")
 WHEN "##InputBox##"
  PROCNewMenu("Input",menu$)
  PROCOverload_InputBoxMenu(SendingToDisplay$)
 
  REM Nobody claimed it so we'll give them the default menu
  ret=-2
ENDCASE
=ret
:
REM Overload this if you wish to put some items on the InputBox
REM menu
DEF PROCOverload_InputBoxMenu(disp$)
ENDPROC
:
REM Overload this if you provide your own sub-menus
DEF PROCOverload_UnknownMenu(menu$)
ENDPROC

DEF PROCMenu_OpenMenu(menu$,x,y)
LOCAL name$,hassave,match
REM We'll mark us as having found a menu - if this is TRUE
REM it means that we have got a menu to create, if FALSE then
REM there was no match and we fault this. If this is TRUE*2
REM then we /found/ a match, but it didn't actually want a menu
match=TRUE
CASE menu$ OF
 WHEN "_Display"
  REM Not an internal pane
  name$=FNGetMenuParameter
  IF LEFT$(name$,2)="##" THEN
   REM This means that no menu has been created
   Menu_Entries=-2
   REM Ask them if they want a save box
   hassave=FNOverload_UnknownWindowMenu(name$,menu$)
   CASE hassave OF
    WHEN -2
     REM Nobody claimed it - just stick to a normal 'display'
     PROCNewMenu("Display",menu$)
     PROCOverload_AddMenuEntries(name$)
     IF Menu_Entries>0 THEN
      REM Something has been added, so seperate it
      PROCAddDottedLine
     ENDIF
     PROCAddMenuEntry("Save","",1,0,">SaveBox")

    WHEN TRUE
     REM They want a save entry...
     IF Menu_Entries=-2 THEN
      REM ... but no menu created, so we'll create a standard one
      PROCNewMenu("Display",menu$)
     ENDIF
     PROCOverload_AddMenuEntries(name$)
     IF Menu_Entries>0 THEN
      REM Something has been added, so seperate it
      PROCAddDottedLine
     ENDIF
     PROCAddMenuEntry("Save","",1,0,">SaveBox")

    WHEN FALSE
     REM They don't want a save entry at the bottom...
     IF Menu_Entries=-2 THEN
      REM ... but no menu created, so we'll create a standard one
      PROCNewMenu("Display",menu$)
     ENDIF
     PROCOverload_AddMenuEntries(name$)
     IF Menu_Entries=0 THEN
      REM ... and we've not got any entries at all so we'll ignore
      match=TRUE*2
     ENDIF

    
     PROCDisplay(FNColour(11)+"*** Menu routine error - bad return code from window menu '"+name$+"'","","##server##")
   ENDCASE
  ELSE
   IF LEFT$(name$,1)="#" THEN
    REM This is a channel menu
    PROCMenu_ChannelStuff(name$,menu$)
    PROCOverload_AddMenuEntries(menu$)
    PROCAddDottedLine
    PROCAddMenuEntry("Save","",1,0,">SaveBox")
   ELSE
    REM This is a user menu
    hassave=FNOverload_UnknownWindowMenu(name$,menu$)
    CASE hassave OF
     WHEN -2
      REM Nobody claimed it - normal users menu
      PROCNewMenu(name$,menu$)
      PROCAddMenuEntry("User '"+name$+"'","",0,0,"_User_Action")
     WHEN TRUE
      IF Menu_Entries=-2 THEN
       REM ... but no menu created, so we'll create a standard one
       PROCNewMenu(name$,menu$)
      ENDIF
      PROCOverload_AddMenuEntries(name$)
      IF Menu_Entries>0 THEN
       REM Something has been added, so seperate it
       PROCAddDottedLine
      ENDIF
      PROCAddMenuEntry("Save","",1,0,">SaveBox")
     WHEN FALSE
      IF Menu_Entries=-2 THEN
       REM ... but no menu created, so we'll create a standard one
       PROCNewMenu(name$,menu$)
      ENDIF
      PROCOverload_AddMenuEntries(name$)
      IF Menu_Entries=0 THEN
       REM ... we've not got any entries at all so we'll ignore
       match=TRUE*2
      ENDIF
     
      PROCDisplay(FNColour(11)+"*** Menu routine error - bad return code from window menu '"+name$+"'","","##server##")
    ENDCASE
   ENDIF
  ENDIF
 WHEN "_Iconbar"
  PROCNewMenu("IRClient",menu$)
  PROCAddMenuEntry("Info","",0,0,">Info")
  PROCAddMenuEntry("Hotlist...","Menu_OpenHotlist",0,0,"")
  PROCAddMenuEntry("Connect","",Online,0,">Connect")
  PROCAddMenuEntry("Disconnect","Disconnect",NOT Online,0,"")
  PROCAddMenuEntry("Choices...","Menu_OpenPrefs",0,0,"")
  PROCOverload_AddMenuEntries(menu$)
  PROCAddDottedLine
  PROCAddMenuEntry("Quit","Menu_Quit",0,0,"")

 WHEN "_User"
  REM They clicked on the user pane list thingy
  LOCAL user$
  user$=FNGetMenuParameter

  PROCNewMenu("User",menu$)
  IF user$="*" THEN
   REM Lots of people selected
   PROCAddMenuEntry("Selection","",0,0,"_User_Action")
  ELSE
   REM Just one person selected (or possibly none)
   PROCAddMenuEntry("User '"+user$+"'","",(user$=""),0,"_User_Action")
  ENDIF
  PROCAddMenuEntry("Select all","",1,0,"")
  PROCAddMenuEntry("Clear selection","",1,0,"")
  PROCOverload_AddMenuEntries(menu$)

 WHEN "_User_Action"
  REM The menu that deals with things to do to users
  LOCAL user$,chan$,usopped
  user$=FNGetMenuParameter
  chan$=FNGetMenuChannel
  usopped=FNUserHasOps(chan$,OurNick$)
  PROCNewMenu("Actions",menu$)
  PROCAddMenuEntry("CTCP","",0,0,"_CTCPList")
  REM I'm not sure we /can/ do these ;-(
  PROCAddMenuEntry("DCCSend","",1,0,"_DCCSend")
  PROCAddMenuEntry("Query window","UserDoubleClicked("""+user$+""")",0,0,"")
  PROCAddMenuEntry("DCCChat","DCCChat("""+user$+""")",0,0,"")
  PROCAddMenuEntry("Operator","Op("""+chan$+""","""+user$+""","+STR$(NOT FNUserHasOps(chan$,user$))+")", NOT usopped,FNUserHasOps(chan$,user$),"")
  PROCAddMenuEntry("Voice","Voice("""+chan$+""","""+user$+""","+STR$(NOT FNUserHasVoice(chan$,user$))+")",NOT usopped,FNUserHasVoice(chan$,user$),"")
  PROCAddMenuEntry("Kick","Kick("""+chan$+""","""+user$+""")",NOT usopped,0,"")
  PROCOverload_AddMenuEntries(menu$)

 WHEN "_Channel_Action"
  REM If the user clicked on the channel pane list
  LOCAL chan$
  chan$=FNGetMenuParameter
  PROCMenu_ChannelStuff(chan$,menu$)
  PROCOverload_AddMenuEntries(menu$)

 WHEN "_Channel"
  LOCAL chan$
  chan$=FNGetMenuParameter
  PROCAddMenuEntry("Channel '"+chan$+"'","",(chan$=""),0,"_Channel_Action")
  PROCAddMenuEntry("Join new...","",1,0,">JoinChannel")
  PROCAddMenuEntry("Disconnect","Disconnect",1,0,"")
  PROCOverload_AddMenuEntries(menu$)

 WHEN "_CTCPList"
  LOCAL to$
  to$="("""+FNGetMenuParameter+""")"
  PROCNewMenu("CTCP requests",menu$)
  PROCAddMenuEntry("ClientInfo","CTCP_DoClientInfo"+to$,0,0,"")
  PROCAddMenuEntry("Finger","CTCP_DoFinger"+to$,0,0,"")
  PROCAddMenuEntry("Ping","CTCP_DoPing"+to$,0,0,"")
  PROCAddMenuEntry("Time","CTCP_DoTime"+to$,0,0,"")
  PROCAddMenuEntry("UserInfo","CTCP_DoUserInfo"+to$,0,0,"")
  PROCAddMenuEntry("Version","CTCP_DoVersion"+to$,0,0,"")
  PROCOverload_AddMenuEntries(menu$)

 WHEN "_FontList"
  PROCNewMenu("List of fonts",menu$)
  LOCAL file$,fileblock,fileptr,numread
  fileptr = 0
  fileblock = FNClaim(512)
  numread = 1
  WHILE fileptr<>-1 AND numread<>0
   SYS "OS_GBPB",9,"<IRClient$Dir>.Resources.Fonts",fileblock,1,fileptr,512,0 TO ,,,numread,fileptr
   IF numread=1 THEN
    file$ = $(fileblock)
    PROCAddMenuEntry(file$,"Menu_ChooseFont("""+file$+""")",0,0,"")
   ENDIF
  ENDWHILE
  PROCRelease(fileblock)
  PROCOverload_AddMenuEntries(menu$)

 WHEN "_Hotlist"
  PROCNewMenu("Hotlist",menu$)
  LOCAL hot$
  hot$=FNGetMenuParameter
  CASE hot$ OF
   WHEN "*"
    PROCAddMenuEntry("Selection","",0,0,"_Hotlist_Entry")
   WHEN ""
    PROCAddMenuEntry("Entry ''","",1,0,"_Hotlist_Entry")
   
    PROCAddMenuEntry("Entry '"+hot$+"'","",0,0,"_Hotlist_Entry")
  ENDCASE
  PROCAddMenuEntry("Select all","Menu_HotlistSelectAll",0,0,"")
  PROCAddMenuEntry("Clear selection","Menu_HotlistClearSel",0,0,"")
  PROCAddMenuEntry("Add entry...","Menu_HotlistAdd",0,0,"")
  PROCOverload_AddMenuEntries(menu$)

 WHEN "_Hotlist_Entry"
  LOCAL hot$,hot
  hot$=FNGetMenuParameter
  hot=hot$="*"
  IF NOT hot THEN
   PROCNewMenu(hot$,menu$)
  ELSE
   PROCNewMenu("Selection",menu$)
  ENDIF
  PROCAddMenuEntry("Edit...","Menu_HotlistEdit",hot,0,"")
  PROCAddMenuEntry("Make default","Menu_HotlistMakeDefault",hot,0,"")
  PROCAddMenuEntry("Delete","Menu_HotlistDelete",0,0,"")
  PROCOverload_AddMenuEntries(menu$)

 
  REM We haven't spotted it so call the Overload to check
  PROCOverload_UnknownMenu(menu$)
  match=(Menu_Entries<>0)
  IF Menu_Entries<>0 THEN
   REM If somebody handled it we can pass it around the rest
   PROCOverload_AddMenuEntries(menu$)
  ENDIF
ENDCASE

CASE match OF
 WHEN TRUE
  REM Yeah ! We've got a menu
  PROCOpenMenu(x,y)
 WHEN FALSE
  REM Damn, a menu with no parent - badly written module ?
  PROCDisplay(FNColour(11)+"*** Menu routine error - nobody caught '"+menu$+"' ","","##server##")
 WHEN TRUE*2
  REM Nah, we don't /really/ want a menu lads...
ENDCASE
ENDPROC
:
REM ******************** Internal calls ************************
DEF PROCMenu_ChannelStuff(chan$,menu$)
PROCNewMenu("Channel "+chan$,menu$)
PROCAddMenuEntry("CTCP","",0,0,"_CTCPList")
PROCAddMenuEntry("Change topic","",0,0,">ChangeTopic")
PROCAddMenuEntry("Ban...","",1,0,"")
PROCAddMenuEntry("Leave","Leave("""+chan$+""")",0,0,"")
ENDPROC
@
